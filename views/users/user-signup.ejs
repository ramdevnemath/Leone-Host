<head>

	<style>
		.gradient-custom-2 {
			/* fallback for old browsers */
			background: #fccb90;

			/* Chrome 10-25, Safari 5.1-6 */
			background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);

			/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
			background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);

		}

		.gradient-custom-1 {
			/* fallback for old browsers */
			background: #fccb90;

			/* Chrome 10-25, Safari 5.1-6 */
			background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);

			/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
			background: linear-gradient(to left, #ee7724, #d8363a, #dd3675, #b44593);

		}

		@media (min-width: 768px) {
			.gradient-form {
				height: 100vh !important;
			}
		}

		@media (min-width: 769px) {
			.gradient-custom-1 {
				border-top-right-radius: .5rem;
				border-bottom-right-radius: .5rem;
			}
		}
	</style>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
		integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
</head>
<section class="h-100 gradient-custom-2 gradient-form" style="border-radius: 0%;">
	<div class="container py-5 h-100">
		<div class="row d-flex justify-content-center align-items-center h-100">
			<div class="col-xl-10">
				<div class="card rounded-3 text-black">
					<div class="row g-0">
						<div class="col-lg-6">
							<div class="card-body p-md-5 mx-md-4">

								<div class="text-center">
									<img src="user/img/logo.png" style="width: 185px;" alt="logo">
									<h5 class="mt-1 mb-4 pb-1">Be your own King !</h5>
								</div>

								<form action="/login" method="post" id="signup-form">
									<p>Create new account</p>

									<div class="form-outline mt-3 mb-4">
										<input type="text" id="fullName" class="form-control"
											placeholder="Username" style="font-weight: lighter;" name="fullName"/>
									</div>

									<div class="form-outline mt-3 mb-4">
										<input type="email" id="email" class="form-control"
											placeholder="Email address" style="font-weight: lighter;" name="email"/>
									</div>

									<div class="form-outline mb-4">
										<input type="number" id="mobile" class="form-control"
											placeholder="Phone number" style="font-weight: lighter;" name="mobile"/>
									</div>

									<div class="form-outline mb-4">
										<input type="password" id="password" class="form-control"
											placeholder="Password" style="font-weight: lighter;" name="password"/>
									</div>

									<div class="form-outline mb-4">
										<input type="password" id="confirmPassword" class="form-control"
											placeholder="Confirm Password" style="font-weight: lighter;" name="confirmPassword"/>
									</div>

									

									<div class="text-center pt-1 mb-5 pb-1">
										<button class="form-conrol btn btn-block fa-lg mb-3"
											style="background-color:#ee7724; border: none;" type="submit">Create
										</button>
									</div>
								</form>
							</div>
						</div>
						<div class="col-lg-6 d-flex align-items-center gradient-custom-1">
							<div class="text-white px-3 py-4 p-md-5 mx-md-4">
								<h4 class="mb-4">We are more than just a company</h4>
								<p class="small mb-0">Leone is a premier footwear website that offers an extensive
									collection of high-quality shoes, boots, sandals, and sneakers for men, women, and
									children. Our website provides an immersive shopping experience that enables
									customers to easily browse through our vast collection of footwear and find the
									perfect pair for any occasion.</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>
<div id="otp-section" class="d-none">
	<form>
	  <h6>OTP</h6>
	  <div class="pin-input">
		<% for (let i = 1; i < 7; i++) { %>
		<input
		  type="number"
		  class="form-control pin-box"
		  id="box<%=i%>"
		  maxlength="1"
		/>
		<% } %>
	  </div>
	  <br />
	  <button
		class="btn btn-verify-otp btn-primary btn-lg mt-3"
		type="button"
		id="verifyOtp"
		style="
		  background-color: rgb(0, 0, 0);
		  color: white;
		  width: 200px;
		  text-align: center;
		  font-size: 17px;
		  transition: background-color 0.3s ease-in-out;
		"
		onmouseover="this.style.backgroundColor='#555';"
		onmouseout="this.style.backgroundColor='rgb(0, 0, 0)';
		"
	  >
		Verify OTP
	  </button>
	</form>
	<div class="d-flex justify-content-between links">
	  <a
		onclick="normalSection()"
		class="text-white d-none"
		id="present"
		>back</a
	  >
	</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
	integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
	crossorigin="anonymous"></script>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script>	
  $(document).ready(function () {
    $.validator.addMethod(
      "noSpecialChars",
      function (value, element) {
        return this.optional(element) || /^(?!\s)[a-zA-Z ]+$/.test(value);
      },
      "Special characters and spaces are not allowed"
    );
    $.validator.addMethod(
      "email",
      function (value, element) {
        return (
          this.optional(element) ||
          /^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$/.test(value)
        );
      },
      "Please enter a valid email address"
    );
    $.validator.addMethod(
      "number",
      function (value, element) {
        return this.optional(element) || /^(?!0)[0-9]+$/.test(value);
      },
      "numbers only allowed"
    );
    $("#signup-form").validate({
      rules: {
        email: {
          required: true,
          email: true,
        },
        fullName: {
          required: true,
          minlength: 3,
          noSpecialChars: true,
        },
        mobile: {
          required: true,
          maxlength: 10,
          minlength: 10,
          number: true,
        },
        password: {
          required: true,
          minlength: 8,
        },
        confirmPassword: {
          required: true,
          equalTo: "#password",
        },
      },
      messages: {
        email: {
          required: "Please enter your email address",
          email: "Please enter a valid email address",
        },
        fullName: {
          required: "Please enter your full name",
          minlength: "Your name must be at least 3 characters long",
          noSpecialChars: "Special characters and spaces are not allowed",
        },
        mobile: {
          required: "Please enter Mobile Number",
          minlength: "10 digit indian number should be there",
          maxlength: "maximum 10 digit allowed in indian number",
          number: "only numbers allowed",
        },
        password: {
          required: "Please enter a password",
          minlength: "Your password must be at least 8 characters long",
        },
        confirmPassword: {
          required: "Please confirm your password",
          equalTo: "Your passwords do not match",
        },
      },
      highlight: function (element) {
        $(element).closest(".form-outline").addClass("is-invalid");
      },
      unhighlight: function (element) {
        $(element).closest(".form-outline").removeClass("is-invalid");
      },
      errorElement: "div",
      errorClass: "invalid-feedback",
      errorPlacement: function (error, element) {
        if (element.parent(".input-group").length) {
          error.insertAfter(element.parent());
        } else {
          error.insertAfter(element);
        }
      },
    });
    $(".pin-box").keyup(function () {
      if ($(this).val().length === $(this).attr("maxlength")) {
        $(this).next().focus();
      }
    });
  });
</script>

<script>
	const inputs = document.querySelectorAll(".pin-box");
  
	inputs.forEach((input, index) => {
	  input.addEventListener("keydown", (event) => {
		if (event.key >= 0 && event.key <= 9) {
		  inputs[index].value = event.key;
		  inputs[index].style.background = "#ffffff";
		  if (index < inputs.length - 1) {
			inputs[index + 1].style.background = "#ffffff";
			inputs[index + 1].focus();
		  }
		  event.preventDefault();
		} else if (event.key === "Backspace" && index > 0) {
		  inputs[index - 1].focus();
		  inputs[index].value = "";
		  inputs[index - 1].value = "";
		  event.preventDefault();
		}
	  });
	});
  </script>
  
  <script>
	const signupForm = document.getElementById("signup-form");
	const otpSection = document.getElementById("otp-section");
  //   const present = document.getElementById("present");
	signupForm.addEventListener("submit", (event) => {
	  event.preventDefault();
	  const validator = $("#signup-form").validate();
	  if (validator.valid()) {
		const mobileInput = document.getElementById("mobile").value;
		const emailInput = document.getElementById("email").value;
  
		if (mobileInput && emailInput) {
		  checkEmailExists(mobileInput, emailInput);
		} else {
		  normalSection();
		}
	  }
	});
  
	async function checkEmailExists(mobile, email) {
	  console.log(mobile + email);
	  fetch("/emailexists", {
		method: "POST",
		body: JSON.stringify({
		  mobile: mobile,
		  email: email,
		}),
		headers: {
		  "Content-Type": "application/json",
		},
	  })
		.then((response) => {
		  return response.json(); // get the response body
		})
		.then((data) => {
		  if (data.success) {
			sendOTP(mobile);
		  } else {
			alert("Email or Mobile already registered");
			normalSection();
		  }
		})
		.catch((error) => {
		  console.error(error);
		  alert("Email already exist");
		});
	}
  
	function sendOTP(mobile) {
	  fetch("/sendotp", {
		method: "POST",
		body: JSON.stringify({
		  mobile: mobile,
		}),
		headers: {
		  "Content-Type": "application/json",
		},
	  })
		.then((response) => {
		  return response.json(); // get the response body
		})
		.then((data) => {
		  console.log(data);
  
		  if (data.success) {
			console.log(data);
			showOTPSection();
		  } else {
			console.log(data);
			normalSection();
			alert("OTP Not sended. Please try again.");
		  }
		})
		.catch((error) => {
		  console.error(error);
		  alert(
			"An error occurred while sending verifying OTP. Please try again later."
		  );
		});
	}
  
	function showOTPSection() {
	  console.log("hai");
  
	  signupForm.classList.add("d-none");
	  console.log("hai");
  
	  otpSection.classList.remove("d-none");
	  console.log("hai");
  
	  // present.classList.remove("d-none");
	  // console.log("hai");
	}
	function normalSection() {
	  otpSection.classList.add("d-none");
	  signupForm.classList.remove("d-none");
	  // present.classList.add("d-none");
	}
	const verifyOTPButton = document.querySelector(".btn-verify-otp");
	verifyOTPButton.addEventListener("click", () => {
	  let otp = document.getElementById("box1").value;
	  otp += document.getElementById("box2").value;
	  otp += document.getElementById("box3").value;
	  otp += document.getElementById("box4").value;
	  otp += document.getElementById("box5").value;
	  otp += document.getElementById("box6").value;
	  console.log(otp);
	  if (verifyOTP(otp)) {
		console.log("verifyotp true");
	  } else {
		alert("Invalid OTP!");
	  }
	});
	async function verifyOTP(otp) {
	  var processing = "Please Wait";
	  $("#verifyOtp").text(processing).css("cursor", "None");
	  console.log(otp);
	  try {
		const response = await fetch("/verifyotp", {
		  method: "POST",
		  body: JSON.stringify({
			userOtp: otp,
		  }),
		  headers: {
			"Content-Type": "application/json",
		  },
		});
  
		const data = await response.json();
  
		console.log(data);
  
		if (data.success) {
		  console.log(data);
		  // OTP verification successful, move to the signinUser()
		  signinUser();
		  // document.querySelector('form').submit();
		} else {
		  console.log(data);
		  // OTP verification failed, display an error message
		  alert("Invalid OTP!");
		  var processing = "Verify OTP";
		  $("#verifyOtp").text(processing).css("cursor", "Pointer");
		  showOTPSection();
		}
	  } catch (error) {
		console.error(error);
		alert("An error occurred while verifying OTP. Please try again later.");
	  }
	}
  
	function signinUser() {
	  const email = document.getElementById("email").value;
	  const fullName = document.getElementById("fullName").value;
	  const mobile = document.getElementById("mobile").value;
	  const password = document.getElementById("password").value;
	  fetch("/signup", {
		method: "POST",
		body: JSON.stringify({
		  email: email,
		  name: fullName,
		  mobile: mobile,
		  password: password,
		}),
		headers: {
		  "Content-Type": "application/json",
		},
	  })
		.then((response) => {
		  if (response.ok) {
			window.location.href = "/login";
		  } else {
			alert("An error occurred. Please try again later.");
		  }
		})
		.catch((error) => {
		  console.error(error);
		  alert("An error occurred. Please try again later.");
		});
    }
  </script>